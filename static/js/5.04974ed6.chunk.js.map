{"version":3,"sources":["components/NavItem/styles.ts","components/NavItem/index.tsx","components/NavList/styles.ts","components/NavList/index.tsx","layouts/Dashboard/styles.ts","components/OrderModal/styles.ts","components/OrderModal/index.tsx","components/MenuModal/styles.ts","components/MenuModal/index.tsx","components/ReviewModal/styles.ts","components/ReviewModal/index.tsx","layouts/Dashboard/index.tsx"],"names":["MenuItem","styled","li","MenuWrapper","ul","NavItem","to","activeClassName","React","memo","MenuHeader","div","NavList","Container","Navbar","Mainboard","Modal","ModalHeader","ModalBody","ModalItem","ButtonWrapper","CloseButton","button","SubmitButton","OrderModal","show","info","onCloseModal","setShowModal","onClick","MenuModal","ReviewModal","Orders","loadable","Menus","Reviews","Infos","Dashboard","useState","showOrderModal","setShowOrderModal","orderInfo","setOrderInfo","showMenuModal","setShowMenuModal","menuInfo","setMenuInfo","showReviewModal","setShowReviewModal","useCallback","path","render","setModalInfo","component"],"mappings":"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","file":"static/js/5.04974ed6.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const MenuItem = styled.li`\n  position: relative;\n  font-size: 1.2rem;\n  color: #fff;\n  margin: 2rem 0;\n  text-align: center;\n  border-top-left-radius: 30px;\n  border-bottom-left-radius: 30px;\n  padding: 1rem;\n  cursor: pointer;\n\n  &:hover {\n    font-weight: bold;\n  }\n\n  svg {\n    position: absolute;\n    left: 2rem;\n    font-size: 1.85rem;\n  }\n`;\n\nexport const MenuWrapper = styled.ul`\n  list-style: none;\n\n  & a {\n    text-decoration: none;\n\n    &.selected ${MenuItem} {\n      background-color: #fff;\n      color: #f77204;\n      font-weight: bold;\n    }\n  }\n`;\n","import React, { VFC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { MenuItem, MenuWrapper } from './styles';\nimport { FaRegListAlt } from 'react-icons/fa';\nimport { MdRestaurant, MdAccessAlarms } from 'react-icons/md';\nimport { IoFastFoodOutline } from 'react-icons/io5';\n\nconst NavItem: VFC = () => {\n  return (\n    <MenuWrapper>\n      <NavLink to=\"/dashboard/order\" activeClassName=\"selected\">\n        <MenuItem>\n          <MdAccessAlarms />\n          <span>주문접수</span>\n        </MenuItem>\n      </NavLink>\n\n      <NavLink to=\"/dashboard/menu\" activeClassName=\"selected\">\n        <MenuItem>\n          <IoFastFoodOutline />\n          <span>메뉴관리</span>\n        </MenuItem>\n      </NavLink>\n      <NavLink to=\"/dashboard/review\" activeClassName=\"selected\">\n        <MenuItem>\n          <FaRegListAlt />\n          <span>리뷰관리</span>\n        </MenuItem>\n      </NavLink>\n      <NavLink to=\"/dashboard/info\" activeClassName=\"selected\">\n        <MenuItem>\n          <MdRestaurant />\n          <span>식당정보</span>\n        </MenuItem>\n      </NavLink>\n    </MenuWrapper>\n  );\n};\n\nexport default React.memo(NavItem);\n","import styled from 'styled-components';\n\nexport const MenuHeader = styled.div`\n  color: #fff;\n  font-size: 1.85rem;\n  margin-top: 2rem;\n  margin-bottom: 5rem;\n  font-weight: bold;\n  text-align: left;\n  display: flex;\n  align-items: center;\n\n  svg {\n    font-size: 100px;\n    margin-left: 2.5rem;\n    margin-right: 1.5rem;\n  }\n`;\n","import NavItem from '@components/NavItem';\nimport React, { VFC } from 'react';\nimport { MenuHeader } from './styles';\nimport { GiStorkDelivery } from 'react-icons/gi';\n\nconst NavList: VFC = () => {\n  return (\n    <>\n      <MenuHeader>\n        <GiStorkDelivery />\n        <span>Delivery Share</span>\n      </MenuHeader>\n      <NavItem />\n    </>\n  );\n};\n\nexport default NavList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n`;\n\nexport const Navbar = styled.div`\n  width: 300px;\n  height: 100vh;\n  background-color: #f77204;\n  position: fixed;\n`;\n\nexport const Mainboard = styled.div`\n  margin-left: 300px;\n  flex: 1;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const Modal = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 999;\n  background-color: rgba(0, 0, 0, 0.75);\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n    background-color: #fff;\n    border-radius: 1rem;\n    overflow: hidden;\n    width: 80%;\n    height: 80%;\n    max-width: 1200px;\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  font-size: 3rem;\n  font-weight: bold;\n  background-color: #f77204;\n  color: #fff;\n  padding: 2rem;\n`;\n\nexport const ModalBody = styled.div`\n  flex: 1;\n  padding: 2rem;\n  position: relative;\n`;\n\nexport const ModalItem = styled.div`\n  & > div {\n    display: flex;\n    justify-content: space-between;\n\n    & > p {\n      width: 45%;\n      padding: 1rem;\n      border-radius: 1rem;\n      background-color: #fff6e0;\n    }\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 2rem;\n  padding: 0 2rem;\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n\n  & > button {\n    width: 35%;\n    height: 4rem;\n    border-radius: 15px;\n    border: none;\n    font-size: 1.5rem;\n    font-weight: bold;\n    cursor: pointer;\n\n    &:hover {\n      opacity: 0.85;\n    }\n  }\n`;\n\nexport const CloseButton = styled.button`\n  background-color: #dedede;\n`;\n\nexport const SubmitButton = styled.button`\n  background-color: #f77204;\n  color: #fff;\n`;\n","import React, { VFC } from 'react';\nimport {\n  ButtonWrapper,\n  CloseButton,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalItem,\n  SubmitButton,\n} from './styles';\n\ninterface Props {\n  show: boolean;\n  info: string;\n  onCloseModal: () => void;\n  setShowModal: (flag: boolean) => void;\n}\n\nconst OrderModal: VFC<Props> = ({ show, info, onCloseModal, setShowModal }) => {\n  if (!show) return null;\n\n  return (\n    <Modal>\n      <div>\n        <ModalHeader>주문번호 {info}</ModalHeader>\n        <ModalBody>\n          <ModalItem>\n            <h1>주문메뉴</h1>\n            <div>\n              <p>뿌링클 x 1</p>\n              <p>치즈볼(5개입) x 1</p>\n            </div>\n          </ModalItem>\n          <ModalItem>\n            <h1>요청사항</h1>\n            <div>\n              <p>조심히 오세요~</p>\n              <p>2인분으로 나눠주세요~</p>\n            </div>\n          </ModalItem>\n          <ButtonWrapper>\n            <SubmitButton>접수</SubmitButton>\n            <CloseButton onClick={onCloseModal}>취소</CloseButton>\n          </ButtonWrapper>\n        </ModalBody>\n      </div>\n    </Modal>\n  );\n};\n\nexport default OrderModal;\n","import styled from 'styled-components';\n\nexport const Modal = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 999;\n  background-color: rgba(0, 0, 0, 0.75);\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n    background-color: #fff;\n    border-radius: 1rem;\n    overflow: hidden;\n    width: 80%;\n    height: 80%;\n    max-width: 1200px;\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  font-size: 3rem;\n  font-weight: bold;\n  background-color: #f77204;\n  color: #fff;\n  padding: 2rem;\n`;\n\nexport const ModalBody = styled.div`\n  flex: 1;\n  padding: 2rem;\n  position: relative;\n`;\n\nexport const ModalItem = styled.div`\n  & > div {\n    display: flex;\n    justify-content: space-between;\n\n    & > p {\n      width: 45%;\n      padding: 1rem;\n      border-radius: 1rem;\n      background-color: #fff6e0;\n    }\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 2rem;\n  padding: 0 2rem;\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n\n  & > button {\n    width: 35%;\n    height: 4rem;\n    border-radius: 15px;\n    border: none;\n    font-size: 1.5rem;\n    font-weight: bold;\n    cursor: pointer;\n\n    &:hover {\n      opacity: 0.85;\n    }\n  }\n`;\n\nexport const CloseButton = styled.button`\n  background-color: #dedede;\n`;\n\nexport const SubmitButton = styled.button`\n  background-color: #f77204;\n  color: #fff;\n`;\n","import { ModalHeader, ModalItem } from '@components/OrderModal/styles';\nimport React, { VFC } from 'react';\nimport { ButtonWrapper, CloseButton, Modal, SubmitButton } from './styles';\nimport { ModalBody } from './../OrderModal/styles';\n\ninterface Props {\n  show: boolean;\n  info: string;\n  onCloseModal: () => void;\n  setShowModal: (flag: boolean) => void;\n}\n\nconst MenuModal: VFC<Props> = ({ show, info, onCloseModal, setShowModal }) => {\n  if (!show) return null;\n\n  return (\n    <Modal>\n      <div>\n        <ModalHeader>{info}</ModalHeader>\n        <ModalBody>\n          <ModalItem>\n            <h1>메뉴사진</h1>\n          </ModalItem>\n          <ModalItem>\n            <h1>메뉴소개</h1>\n          </ModalItem>\n          <ModalItem>\n            <h1>메뉴가격</h1>\n          </ModalItem>\n          <ButtonWrapper>\n            <SubmitButton>수정</SubmitButton>\n            <CloseButton onClick={onCloseModal}>취소</CloseButton>\n          </ButtonWrapper>\n        </ModalBody>\n      </div>\n    </Modal>\n  );\n};\n\nexport default MenuModal;\n","import styled from 'styled-components';\n\nexport const Modal = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 999;\n  background-color: rgba(0, 0, 0, 0.75);\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n    background-color: #fff;\n    border-radius: 1rem;\n    overflow: hidden;\n    width: 80%;\n    height: 80%;\n    max-width: 1200px;\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  font-size: 3rem;\n  font-weight: bold;\n  background-color: #f77204;\n  color: #fff;\n  padding: 2rem;\n`;\n\nexport const ModalBody = styled.div`\n  flex: 1;\n  padding: 2rem;\n  position: relative;\n`;\n\nexport const ModalItem = styled.div`\n  & > div {\n    display: flex;\n    justify-content: space-between;\n\n    & > p {\n      width: 45%;\n      padding: 1rem;\n      border-radius: 1rem;\n      background-color: #fff6e0;\n    }\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 2rem;\n  padding: 0 2rem;\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n\n  & > button {\n    width: 35%;\n    height: 4rem;\n    border-radius: 15px;\n    border: none;\n    font-size: 1.5rem;\n    font-weight: bold;\n    cursor: pointer;\n\n    &:hover {\n      opacity: 0.85;\n    }\n  }\n`;\n\nexport const CloseButton = styled.button`\n  background-color: #dedede;\n`;\n\nexport const SubmitButton = styled.button`\n  background-color: #f77204;\n  color: #fff;\n`;\n","import React, { VFC } from 'react';\nimport {\n  ButtonWrapper,\n  CloseButton,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalItem,\n  SubmitButton,\n} from './styles';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowModal: (flag: boolean) => void;\n}\n\nconst ReviewModal: VFC<Props> = ({ show, onCloseModal, setShowModal }) => {\n  if (!show) return null;\n\n  return (\n    <Modal>\n      <div>\n        <ModalHeader>nickname님의 리뷰</ModalHeader>\n        <ModalBody>\n          <ModalItem>\n            <h1>별점</h1>\n          </ModalItem>\n          <ModalItem>\n            <h1>리뷰내용</h1>\n          </ModalItem>\n\n          <ButtonWrapper>\n            <SubmitButton>수정</SubmitButton>\n            <CloseButton onClick={onCloseModal}>취소</CloseButton>\n          </ButtonWrapper>\n        </ModalBody>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ReviewModal;\n","import NavList from '@components/NavList';\nimport React, { useCallback, useState, VFC } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Container, Mainboard, Navbar } from './styles';\nimport loadable from '@loadable/component';\nimport OrderModal from '@components/OrderModal';\nimport MenuModal from '@components/MenuModal';\nimport ReviewModal from '@components/ReviewModal';\n\nconst Orders = loadable(() => import('@pages/Orders/index'));\nconst Menus = loadable(() => import('@pages/Menus/index'));\nconst Reviews = loadable(() => import('@pages/Reviews/index'));\nconst Infos = loadable(() => import('@pages/Infos/index'));\n\nconst Dashboard: VFC = () => {\n  const [showOrderModal, setShowOrderModal] = useState(false);\n  const [orderInfo, setOrderInfo] = useState('');\n  const [showMenuModal, setShowMenuModal] = useState(false);\n  const [menuInfo, setMenuInfo] = useState('');\n  const [showReviewModal, setShowReviewModal] = useState(false);\n\n  const onCloseModal = useCallback(() => {\n    setShowOrderModal(false);\n    setShowMenuModal(false);\n    setShowReviewModal(false);\n  }, []);\n\n  return (\n    <Container>\n      <Navbar>\n        <NavList />\n      </Navbar>\n\n      <Mainboard>\n        <Switch>\n          <Route\n            path=\"/dashboard/order\"\n            render={() => (\n              <Orders setShowModal={setShowOrderModal} setModalInfo={setOrderInfo} />\n            )}\n          />\n          <Route\n            path=\"/dashboard/menu\"\n            render={() => (\n              <Menus setShowModal={setShowMenuModal} setModalInfo={setMenuInfo} />\n            )}\n          />\n          <Route\n            path=\"/dashboard/review\"\n            render={() => <Reviews setShowModal={setShowReviewModal} />}\n          />\n          <Route path=\"/dashboard/info\" component={Infos} />\n        </Switch>\n      </Mainboard>\n\n      <OrderModal\n        show={showOrderModal}\n        info={orderInfo}\n        onCloseModal={onCloseModal}\n        setShowModal={setShowOrderModal}\n      />\n      <MenuModal\n        show={showMenuModal}\n        info={menuInfo}\n        onCloseModal={onCloseModal}\n        setShowModal={setShowMenuModal}\n      />\n      <ReviewModal\n        show={showReviewModal}\n        onCloseModal={onCloseModal}\n        setShowModal={setShowReviewModal}\n      />\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}